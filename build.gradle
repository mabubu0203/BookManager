buildscript {
    ext {
        // ソースと実行ファイルのJavaバージョン
        jdkVersion = jdkVersion
        defaultEncoding = defaultEncoding

        // SpringBoot
        springBootVersion = springbootVersion

        // jUnit5
        jupiterVersion = jupiterVersion
        platformVersion = platformVersion

        // Doma
        springbootDomaVersion = springbootDomaVersion

    }

    repositories {
        jcenter()
    }

}

plugins {
    id "org.springframework.boot" version "2.0.1.RELEASE"
}

apply from: "$rootDir/gradle/ide.gradle"

allprojects {

    apply plugin: 'jacoco'
    apply plugin: 'java'

    repositories {
        jcenter()
    }

    jacoco {
        toolVersion = "0.8.1"
        reportsDir = file("$buildDir/customJacocoReportDir")
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    javadoc {
        options {
            addStringOption("-add-modules", "java.xml.bind,java.xml.ws.annotation")
            author = true
            charSet = defaultEncoding
            docEncoding = defaultEncoding
            encoding = defaultEncoding
            links(
                    "https://docs.oracle.com/javase/10/docs/api/",
                    "https://docs.spring.io/spring-boot/docs/current/api/"
            )
            linkSource = true
            noHelp = true
            setMemberLevel(JavadocMemberLevel.PUBLIC)
            setNoQualifiers(["all"])
        }
    }

    tasks.withType(JavaCompile) {
        doFirst {
            options.encoding = defaultEncoding
            sourceCompatibility = jdkVersion
            targetCompatibility = jdkVersion
            options.compilerArgs = [
                    '-Xlint:unchecked', '-Xlint:deprecation',
                    '--add-modules', 'java.xml.bind',
                    '--add-modules', 'java.xml.ws.annotation',
                    '--add-exports', 'java.xml.bind/com.sun.istack.internal=ALL-UNNAMED'
            ]
        }
    }

}

subprojects{

    apply plugin: 'application'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'war'

    repositories {
        jcenter()
    }

    task('default') {
        dependsOn 'clean', 'check'
    }

}

project(':micro-api') {
    ext.moduleName = 'jp.co.valtech.bm.api'
    dependencies {
        compile project(':micro-interfaces'), project(':micro-validator')
        testCompile project(':micro-test')
    }
}

project(':micro-interfaces') {
    ext.moduleName = 'jp.co.valtech.bm.interfaces'
    dependencies {
        compile project(':micro-validator')
        testCompile project(':micro-test')
    }
}

project(':micro-test') {
    ext.moduleName = 'jp.co.valtech.bm.test'
}

project(':micro-validator') {
    ext.moduleName = 'jp.co.valtech.bm.validator'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleVersion
}