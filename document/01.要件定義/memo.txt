----------------------------------------------

成果物：社内書籍管理システム(超概要)

作成機能洗い出し：
・書籍の検索
・書籍の登録申請
・書籍の登録承認(承認不可含む)
・書籍の詳細取得
・書籍の編集(削除含む)
・書籍の貸出機能等(作成範囲外)

----------------------------------------------

成果物：社内書籍管理システム(要件)

目的：
当システムを利用することにより、下記の業務改善を促進する。
・社内にある書籍を登録・管理し、検索できること。
・重複した書籍を購入する金銭的負債を軽減する。
・書籍の貸出機能を可能とし、会社で購入した書籍を社員は利用できる。

前提：
・管理できる書籍はISBNが13桁のコードであること。(2007年以降で実在する書籍のみとする)
・技術書のみを管理する書籍の対象とする。
・GoogleBooksAPIなどの外部APIを使用する。

要件外：
・電子書籍は管理外とする。
・貸出機能については次期要件とする。

機能制限：
・当システムの利用者は管理者からのみとし、管理者以外からのアクセスは禁止とするが、別機能で実現することする。
・"ISBN978-4-"で始まるもののみを対象とする。（日本の書籍）
・有料の機能は利用しない。
・社内からの利用のみとし、セキリティについてはクラウドサーバー上で設定する。

利用者：
・システム管理者(登録許可・編集・閲覧可能)
・システム運用者(登録申請・編集・閲覧可能)
・システム開発者(登録・編集・閲覧可能)

構成：
・書籍についてはRDBにて一元管理する。
・画面から各WebApiを呼び出す方式とする。

----------------------------------------------

成果物：社内書籍管理システム(方式設計)

RDB：
・Postgres10にて管理する。
・"database"には当システム以外からは呼ばれない。
・プログラムから呼び出す際は「program」(仮)ユーザーからアクセスする。
・リリース用とテスト用を用意する。ただし開発用はdockerコンテナを利用する。
・具体的なテーブル内容については開発時に決める。
・データベース・アクセスはJavaの部品にて実現する。
・ドメイン機能を使用する。

画面：
作成対象から外すとするも、WebApiとのIFは必ず定義する。

WebApi：
・Java(9 or 10)にて実装する。
・アプリケーション・サーバーはSpringBootの内蔵Tomcatを使用するとする。
・同時アクセスは最大４人を想定するとする。(社内で使用するので)
・"RESTful API"の考え方を踏襲するとする。
・入力値については検証対象とする。

----------------------------------------------